########################################################################
# Public configuration variables.
ARG JFLAG=-j4
ARG TOOLCHAIN=llvm12

ARG FREEBSD_HOST_SRC_PATH=/usr/src
ARG FREEBSD_KERNCONF=GENERIC

# Private configuration variables, not really meant to be overridable.
ARG _FREEBSD_SRC_PATH=/root/freebsd
ARG _FREEBSD_BUILDROOT=/root/build
ARG _FREEBSD_VM_IMG=/root/vm.raw
ARG _FREEBSD_SRCCONF=/root/src.conf

########################################################################
# Set up a few things for our build.
PKG bhyve-firmware ${TOOLCHAIN}

# Work around a Bastille bug, it is supposed to create the mount point dir.
CMD mkdir -p ${_FREEBSD_SRC_PATH}
MOUNT ${FREEBSD_HOST_SRC_PATH} ${_FREEBSD_SRC_PATH}

CP run.sh /root
RENDER /root/run.sh
CP src.conf ${_FREEBSD_SRCCONF}
RENDER ${_FREEBSD_SRCCONF}

# Build FreeBSD.
# For now we build toolchains so that it's possible to compile GENERIC-KASAN.
CMD mkdir -p ${_FREEBSD_BUILDROOT}
CMD make -C ${_FREEBSD_SRC_PATH} ${JFLAG} buildworld SRCCONF=${_FREEBSD_SRCCONF}
CMD make -C ${_FREEBSD_SRC_PATH} ${JFLAG} buildkernel SRCCONF=${_FREEBSD_SRCCONF}
CMD make -C ${_FREEBSD_SRC_PATH} ${JFLAG} installworld -DNO_FSCHG DESTDIR=${_FREEBSD_BUILDROOT} SRCCONF=${_FREEBSD_SRCCONF}
CMD make -C ${_FREEBSD_SRC_PATH} ${JFLAG} installkernel -DNO_FSCHG DESTDIR=${_FREEBSD_BUILDROOT} SRCCONF=${_FREEBSD_SRCCONF}
CMD make -C ${_FREEBSD_SRC_PATH} distribution -DNO_FSCHG DESTDIR=${_FREEBSD_BUILDROOT} SRCCONF=${_FREEBSD_SRCCONF}

CP vm/ ${_FREEBSD_BUILDROOT}
CMD touch ${_FREEBSD_BUILDROOT}/firstboot

# TODO: need a different solution for cross-built VMs.
# Required to avoid bogus "test is broken" reports in sys/cddl/zfs.
CMD pkg --rootdir ${_FREEBSD_BUILDROOT} install -y ksh93
# Required on FreeBSD 12.
CMD pkg --rootdir ${_FREEBSD_BUILDROOT} install -y kyua

# Create an EFI system partition.
CMD mkdir -p ${_FREEBSD_BUILDROOT}/boot/efi/EFI/BOOT
CMD cp ${_FREEBSD_BUILDROOT}/boot/loader.efi ${_FREEBSD_BUILDROOT}/boot/efi/EFI/BOOT/bootx64.efi
CMD makefs -t msdos -o fat_type=16 -o sectors_per_cluster=1 -o volume_label=EFISYS -s 4096k /root/vm.efi ${_FREEBSD_BUILDROOT}/boot/efi

# Create the VM image.
CMD makefs -B little -M 10g -S 512 -Z -o label=VM -o softupdates=1 -o version=2 /root/vm.part ${_FREEBSD_BUILDROOT}
CMD mkimg -s gpt -f raw -S 512 -b ${_FREEBSD_BUILDROOT}/boot/pmbr -p freebsd-boot/bootfs:=${_FREEBSD_BUILDROOT}/boot/gptboot -p efi:=/root/vm.efi -p freebsd-ufs/rootfs:=/root/vm.part -o ${_FREEBSD_VM_IMG}
CMD truncate -s 50g ${_FREEBSD_VM_IMG}
